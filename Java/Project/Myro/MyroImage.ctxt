#BlueJ class context
comment0.params=
comment0.target=MyroImage()
comment0.text=\n\ Default\ constructor,\ only\ callable\ by\ subclass\ constructor.\n
comment1.params=x\ y
comment1.target=void\ show(int,\ int)
comment1.text=\n\ Causes\ this\ image\ to\ be\ visible\ in\ a\ window\ located\ at\ a\ specified\ location\ on\ the\ screen.\ \ The\ parameters\n\ specify\ the\ location\ of\ the\ upperleft\ corner\ of\ the\ window.\n\ \n\ @param\ x\ x\ coordinate\ of\ the\ upperleft\ corner\ of\ the\ window\n\ @param\ y\ y\ coordinate\ of\ the\ upperleft\ corner\ of\ the\ window\n
comment10.params=xlow\ ylow\ width\ height
comment10.target=MyroBlobSpec\ defineBlob(int,\ int,\ int,\ int)
comment10.text=\n\ Calculate\ a\ blob\ based\ on\ a\ rectangular\ area\ of\ the\ image.\ \ The\ specified\ rectangle\ must\ be\ non-empty\n\ and\ be\ conpletely\ within\ the\ image.\ \ The\ returned\ blob\ contains\ the\ average\ color\ of\ the\ rectangular\ area\n\ of\ the\ image\ and\ can\ be\ passed\ to\ the\ scribbler's\ configureBlob\ method.\n\ <p><p>\n\ <b>Precondition\:</b>\ (xlow,ylow)\ is\ the\ coordinate\ of\ the\ upperleft\ corner\ or\ a\ rectangle\ within\ the\ image\n\ (i.e.,\ >\=0),\ width\ and\ height\ are\ both\ >\ 0,\ and\ the\ lowerright\ corner\ of\ the\ rectangle\ is\ within\ the\ image.\n\ \n\ @return\ A\ blob\ that\ can\ be\ passed\ to\ a\ scribbler\ configureBlob\ method.\n
comment11.params=x\ y
comment11.target=java.awt.Color\ get(int,\ int)
comment11.text=\n\ Returns\ the\ RGB\ color\ of\ pixel\ (x,y).\n\ <p><p>\n\ <b>Precondition\:</b>\ (x,y)\ is\ the\ coordinate\ of\ a\ pixel\ in\ the\ image.\n\ \n\ @param\ x\ x\ xoordinate\ of\ the\ pixel\n\ @param\ y\ y\ coordinate\ of\ the\ pixel\n\ @return\ The\ color\ of\ pixel\ (x,y)\n
comment12.params=x\ y
comment12.target=int\ getGray(int,\ int)
comment12.text=\n\ Returns\ the\ grayscale\ value\ of\ pixel\ (x,y).\n\ <p><p>\n\ <b>Precondition\:</b>\ (x,y)\ is\ the\ coordinate\ of\ a\ pixel\ in\ the\ image.\n\ \n\ @param\ x\ x\ xoordinate\ of\ the\ pixel\n\ @param\ y\ y\ coordinate\ of\ the\ pixel\n\ @return\ The\ grayscale\ value\ of\ pixel\ (x,y),\ in\ the\ range\ 0..255\n
comment13.params=x\ y\ color
comment13.target=void\ set(int,\ int,\ java.awt.Color)
comment13.text=\n\ Sets\ the\ color\ of\ pixel\ (x,y)\ to\ an\ RGB\ color.\ \ Changes\ will\ not\ appear\ on\ the\ screen\ until\ either\n\ {@link\ \#show\ show}\ or\ {@link\ \#repaint\ repaint}\ is\ called.\n\ <p><p>\n\ <b>Precondition\:</b>\ (x,y)\ is\ the\ coordinate\ of\ a\ pixel\ in\ the\ image,\ color\ is\ not\ null.\n\ \n\ @param\ x\ x\ xoordinate\ of\ the\ pixel\n\ @param\ y\ y\ coordinate\ of\ the\ pixel\n\ @param\ color\ An\ RGB\ Color\ that\ pixel\ (x,y)\ is\ set\ to.\n
comment14.params=x\ y\ grayLevel
comment14.target=void\ setGray(int,\ int,\ int)
comment14.text=\n\ Sets\ the\ color\ of\ pixel\ (x,y)\ to\ a\ grayscale\ color.\n\ <p><p>\n\ <b>Precondition\:</b>\ (x,y)\ is\ the\ coordinate\ of\ a\ pixel\ in\ the\ image,\ grayLevel\ is\ between\ 0\ (inclusive)\n\ and\ 255\ (inclusive).\ \ Changes\ will\ not\ appear\ on\ the\ screen\ until\ either\ {@link\ \#show\ show}\n\ or\ {@link\ \#repaint\ repaint}\ is\ called.\n\ \n\ @param\ x\ x\ xoordinate\ of\ the\ pixel\n\ @param\ y\ y\ coordinate\ of\ the\ pixel\n\ @param\ grayLevel\ A\ grayscale\ value\ between\ 0\ and\ 255\ that\ pixel\ (x,y)\ is\ set\ to.\n
comment15.params=filename
comment15.target=void\ save(java.lang.String)
comment15.text=\n\ Save\ the\ image\ to\ a\ file.\ \ The\ only\ supported\ formats\ are\ jpg\ and\ png.\n\ <p><p>\n\ <b>Precondition\:</b>\ filename\ must\ have\ an\ extension\ of\ .jpg\ or\ .png\n\ \n\ @param\ filename\ Name\ of\ the\ file\ to\ save\ the\ image\ to.\n
comment16.params=color
comment16.target=double\ lum(java.awt.Color)
comment16.text=\n\ Returns\ the\ luminosity\ of\ an\ RGB\ color.\n
comment17.params=color
comment17.target=java.awt.Color\ toGray(java.awt.Color)
comment17.text=\n\ Returns\ a\ grayscale\ color\ of\ an\ RGB\ color.\n
comment18.params=caption
comment18.target=javax.swing.JLabel\ _makeLabel(java.lang.String)
comment18.text=\n\ Returns\ a\ JLabel\ containing\ the\ passed\ String.\n
comment2.params=
comment2.target=void\ show()
comment2.text=\n\ Causes\ this\ image\ to\ be\ visible\ in\ a\ window.\ \ If\ the\ image\ had\ not\ been\ displayed\ previously\ a\ window\ will\n\ be\ created\ at\ the\ upperleft\ corner\ of\ the\ screen.\n
comment3.params=
comment3.target=void\ hide()
comment3.text=\n\ Causes\ this\ image\ to\ be\ invisible\ (i.e.,\ the\ window\ disappears\ from\ the\ screen).\ \ If\ this\ image\ was\ already\n\ invisible,\ no\ changes\ are\ made\ to\ any\ window.\n
comment4.params=
comment4.target=void\ repaint()
comment4.text=\n\ Changes\ made\ to\ the\ image\ (e.g.,\ by\ calling\ {@link\ \#set\ set})\ are\ reflected\ in\ the\ displayed\ window.\ \ \n\ If\ the\ window\ is\ invisible\ no\ changes\ are\ made\ to\ any\ window.\n
comment5.params=newImage
comment5.target=void\ setImage(MyroImage)
comment5.text=\n\ Changes\ this\ image\ to\ be\ a\ copy\ of\ the\ one\ passed\ as\ a\ parameter.\ \ If\ the\ image\ is\ visible,\ then\ the\n\ image\ is\ redisplayed\ to\ reflect\ the\ new\ image.\n
comment6.params=
comment6.target=int\ height()
comment6.text=\n\ Returns\ the\ height\ of\ the\ image.\n
comment7.params=
comment7.target=int\ width()
comment7.text=\n\ Returns\ the\ width\ of\ the\ image.\n
comment8.params=
comment8.target=int\ getType()
comment8.text=\n\ Returns\ the\ type\ (i.e.,\ Color\ or\ Grayscale)\ of\ this\ image.\n\ \n\ @return\ Value\ MYRO_IMAGE_COLOR\ or\ MYRO_IMAGE_GRAY.\n
comment9.params=
comment9.target=MyroBlobSpec\ getUserDefinedBlob()
comment9.text=\n\ Allows\ the\ user\ to\ select\ a\ rectangular\ area\ of\ the\ image\ used\ to\ define\ a\ blob.\ \ The\ image\ is\ first\n\ made\ visible,\ then\ a\ message\ at\ the\ bottom\ of\ the\ window\ instructs\ the\ user\ to\ drag\ an\ area\ to\ define\n\ a\ blob.\ \ The\ blob\ returned\ contains\ the\ average\ color\ of\ the\ selected\ area\ and\ can\ be\ passed\ to\ the\n\ scribbler\ configureBlob\ method.\n\ \n\ @return\ null\ if\ the\ user\ selected\ a\ zero-size\ rectangle;\ otherwise\ a\ blob\ that\ can\ be\ passed\ to\ a\ scribbler\n\ configureBlob\ method.\n
numComments=19
