#BlueJ class context
comment0.params=
comment0.target=MyroColorImage()
comment0.text=\n\ Create\ a\ 1x1\ color\ image.\ \ The\ pixel\ will\ be\ black.\n
comment1.params=w\ h\ pixelColor
comment1.target=MyroColorImage(int,\ int,\ java.awt.Color)
comment1.text=\n\ Create\ a\ color\ image\ of\ a\ specified\ dimension.\ \ The\ initial\ color\ of\ all\ pixels\ is\ passed\n\ as\ a\ parameter.\n\ \n\ @pre\ w\ >\ 0\ and\ h\ >\ 0\n\ \n\ @param\ w\ The\ width\ of\ the\ color\ image\n\ @param\ h\ The\ height\ of\ the\ color\ image\n\ @param\ pixelColor\ The\ initial\ color\ of\ all\ pixels\n
comment2.params=w\ h
comment2.target=MyroColorImage(int,\ int)
comment2.text=\n\ Create\ a\ color\ image\ of\ a\ specified\ dimension.\ \ All\ pixels\ will\ be\ black.\n\ \n\ @pre\ w\ >\ 0\ and\ h\ >\ 0\n\ \n\ @param\ w\ The\ width\ of\ the\ color\ image\n\ @param\ h\ The\ height\ of\ the\ color\ image\n
comment3.params=jpegBuf
comment3.target=MyroColorImage(byte[])
comment3.text=\n\ Creates\ a\ color\ image\ from\ a\ stream\ of\ bytes\ that\ comprise\ a\ jpeg\ image.\ \ A\ RuntimeException\n\ is\ thrown\ if\ an\ error\ occurs\ decoding\ the\ byte\ stream.\n\ \n\ @param\ jpegBuf\ An\ array\ of\ bytes\ that\ comprise\ a\ jpeg\ image.\n
comment4.params=filename
comment4.target=boolean\ loadImage(java.lang.String)
comment4.text=\n\ Load\ a\ color\ image\ from\ a\ file.\ \ The\ dimension\ of\ the\ image\ will\ be\ the\ dimension\n\ of\ the\ image\ in\ the\ file.\n\ \n\ @param\ filename\ The\ name\ of\ a\ file\ containing\ an\ image.\n\ \n\ @return\ true\ if\ the\ image\ was\ successfully\ loaded,\ false\ if\ an\ error\ occurred\n
comment5.params=x\ y
comment5.target=java.awt.Color\ getColor(int,\ int)
comment5.text=\n\ Returns\ the\ RGB\ color\ of\ pixel\ (x,y).\n\ \n\ @pre\ (x,y)\ is\ the\ coordinate\ of\ a\ pixel\ in\ the\ image.\n\ \n\ @param\ x\ x\ xoordinate\ of\ the\ pixel\n\ @param\ y\ y\ coordinate\ of\ the\ pixel\n\ @return\ The\ color\ of\ pixel\ (x,y)\n
comment6.params=x\ y
comment6.target=int\ getGray(int,\ int)
comment6.text=\n\ Returns\ the\ grayscale\ value\ of\ pixel\ (x,y).\n\ \n\ @pre\ (x,y)\ is\ the\ coordinate\ of\ a\ pixel\ in\ the\ image.\n\ \n\ @param\ x\ x\ xoordinate\ of\ the\ pixel\n\ @param\ y\ y\ coordinate\ of\ the\ pixel\n\ @return\ The\ grayscale\ value\ of\ pixel\ (x,y),\ in\ the\ range\ 0..255\n
comment7.params=x\ y\ c
comment7.target=void\ setColor(int,\ int,\ java.awt.Color)
comment7.text=\n\ Sets\ the\ color\ of\ pixel\ (x,y)\ to\ an\ RGB\ color.\ \ Changes\ will\ not\ appear\ on\ the\ screen\ until\ either\n\ {@link\ \#show\ show}\ or\ {@link\ \#repaint\ repaint}\ is\ called.\n\ \n\ @pre\ (x,y)\ is\ the\ coordinate\ of\ a\ pixel\ in\ the\ image,\ color\ is\ not\ null.\n\ \n\ @param\ x\ x\ xoordinate\ of\ the\ pixel\n\ @param\ y\ y\ coordinate\ of\ the\ pixel\n\ @param\ color\ An\ RGB\ Color\ that\ pixel\ (x,y)\ is\ set\ to.\n
comment8.params=x\ y\ grayLevel
comment8.target=void\ setGray(int,\ int,\ int)
comment8.text=\n\ Sets\ the\ color\ of\ pixel\ (x,y)\ to\ a\ grayscale\ color.\n\ \n\ @pre\ (x,y)\ is\ the\ coordinate\ of\ a\ pixel\ in\ the\ image,\ grayLevel\ is\ between\ 0\ (inclusive)\n\ and\ 255\ (inclusive).\ \ Changes\ will\ not\ appear\ on\ the\ screen\ until\ either\ {@link\ \#show\ show}\n\ or\ {@link\ \#repaint\ repaint}\ is\ called.\n\ \n\ @param\ x\ x\ xoordinate\ of\ the\ pixel\n\ @param\ y\ y\ coordinate\ of\ the\ pixel\n\ @param\ grayLevel\ A\ grayscale\ value\ between\ 0\ and\ 255\ that\ pixel\ (x,y)\ is\ set\ to.\n
numComments=9
