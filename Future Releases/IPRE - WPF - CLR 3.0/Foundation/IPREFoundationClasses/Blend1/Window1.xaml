<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2006" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	x:Class="Blend1.Window1"
	x:Name="Window"
	Title="Dashboard"
	Width="640" Height="252" Opacity="1" HorizontalAlignment="Stretch" Background="{x:Null}" BorderThickness="0,0,0,0" Foreground="#FFFFFFFF" ResizeMode="CanMinimize" SizeToContent="Manual" AllowsTransparency="True" WindowStyle="None">

	<Window.Resources>
		<Style x:Key="ButtonFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#F3F3F3" Offset="0"/>
			<GradientStop Color="#EBEBEB" Offset="0.5"/>
			<GradientStop Color="#DDDDDD" Offset="0.5"/>
			<GradientStop Color="#CDCDCD" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
		
		<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Microsoft_Windows_Themes:ButtonChrome SnapsToDevicePixels="true" x:Name="Chrome" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" RenderDefaulted="{TemplateBinding IsDefaulted}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
						</Microsoft_Windows_Themes:ButtonChrome>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="ToggleButton.IsChecked" Value="true">
								<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BitmapEffect" TargetName="Chrome">
            						<Setter.Value>
              							<OuterGlowBitmapEffect GlowColor="Red" GlowSize="10"/>
            						</Setter.Value>
          						</Setter>
								<!--Setter Property="Background" TargetName="Chrome">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.464,1.557" StartPoint="0.464,-0.111">
										<GradientStop Color="#FEF91702" Offset="0.183"/>
										<GradientStop Color="#FFFF1313" Offset="0.995"/>
										<GradientStop Color="#FF5C2520" Offset="0.51"/>
										<GradientStop Color="#FEFF0000" Offset="0.678"/>
								</LinearGradientBrush>
								</Setter.Value>
								</Setter-->
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	
		<!-- Simple Button - This control sets brushes on each state. Note that these brushes must be listed above since they are static resources -->
		<Style x:Key="ButtonStyle3" TargetType="{x:Type Button}" BasedOn="{x:Null}">
			<Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
			<Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
					
						<!-- We use Grid as a root because it is easy to add more elements to customize the button -->
						<Grid x:Name="Grid">
							<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
						
							<!-- Content Presenter is where the text content etc is placed by the control -->
							<!-- The bindings are useful so that the control can be parameterized without editing the template -->
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
						</Grid>
					
						<!--Each state sets a brush on the Border in the template -->
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<!--Setter Property="Background" Value="{DynamicResource MouseOverBrush}" TargetName="Border"/-->
								<Setter Property="Background" TargetName="Border">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.464,1.557" StartPoint="0.464,-0.111">
										<GradientStop Color="#FEF91702" Offset="0.183"/>
										<GradientStop Color="#FFFF1313" Offset="0.995"/>
										<GradientStop Color="#FF5C2520" Offset="0.51"/>
										<GradientStop Color="#FEFF0000" Offset="0.678"/>
								</LinearGradientBrush>
								</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border"/>
								<Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
								<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
								<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Microsoft_Windows_Themes:ButtonChrome SnapsToDevicePixels="true" x:Name="Chrome" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" RenderDefaulted="{TemplateBinding IsDefaulted}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
						</Microsoft_Windows_Themes:ButtonChrome>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="ToggleButton.IsChecked" Value="true">
								<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BitmapEffect" TargetName="Chrome">
            						<Setter.Value>
              							<OuterGlowBitmapEffect GlowColor="Green" GlowSize="10" />
            						</Setter.Value>
          						</Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	
	</Window.Resources>

	<Grid x:Name="LayoutRoot">
		<Grid.Background>
			<!--SolidColorBrush Color="#000000" /-->
			<ImageBrush TileMode="Tile"  Viewport="0 0 10 10" ViewportUnits="Absolute" ImageSource="bk1.jpg" />
		</Grid.Background>
		
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="0.009*"/>
			<ColumnDefinition Width="0.297*"/>
			<ColumnDefinition Width="0.311*"/>
			<ColumnDefinition Width="0.374*"/>
			<ColumnDefinition Width="0.009*"/>
			<ColumnDefinition Width="0*"/>
			<ColumnDefinition Width="0*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="0.119*"/>
			<RowDefinition Height="0.861*"/>
			<RowDefinition Height="0.02*"/>
		</Grid.RowDefinitions>
		<Rectangle Stroke="#FF000000" StrokeThickness="0" RadiusX="0" RadiusY="0" VerticalAlignment="Top" Height="29.988" Grid.ColumnSpan="5" Grid.RowSpan="2" x:Name="TitleBar">
			<Rectangle.Fill>
				<LinearGradientBrush EndPoint="1.064,0.326" StartPoint="0.1,11.631">
					<GradientStop Color="#FF000000" Offset="0"/>
					<GradientStop Color="#FFA4A1A1" Offset="0.543"/>
					<GradientStop Color="#FF171515" Offset="1"/>
					<GradientStop Color="#FFFFFFFF" Offset="1"/>
				</LinearGradientBrush>
			</Rectangle.Fill>
		</Rectangle>
		<Rectangle Fill="#FF171717" Stroke="{x:Null}" StrokeThickness="1" RadiusX="5" RadiusY="5" HorizontalAlignment="Left" Width="5.76" Grid.ColumnSpan="2" Grid.RowSpan="3" Margin="0,-1,0,1"/>
		<Rectangle Fill="#FF171717" Stroke="{x:Null}" StrokeThickness="1" RadiusX="5" RadiusY="5" Margin="0,0,0,0" Grid.ColumnSpan="5" Grid.Row="2"/>
		<Rectangle Fill="#FF171717" Stroke="{x:Null}" StrokeThickness="1" RadiusX="5" RadiusY="5" Grid.Column="4" Grid.RowSpan="3"/>
		<Rectangle Opacity="0.89" Fill="#FF171717" Stroke="#FF000000" StrokeThickness="0" RadiusX="0" RadiusY="0" Grid.ColumnSpan="5" Grid.RowSpan="3"/>
		<Rectangle Opacity="0.52" RenderTransformOrigin="-0.047,-0.037" Fill="#FF303030" Stroke="#FF000000" StrokeThickness="1" RadiusX="5" RadiusY="5" Margin="8,8,4,3" d:LayoutOverrides="GridBox" Grid.Column="1" Grid.Row="1"/>
		<Rectangle Opacity="0.52" RenderTransformOrigin="-0.047,-0.037" Fill="#FF303030" Stroke="#FF000000" StrokeThickness="1" RadiusX="5" RadiusY="5" Margin="4,8,4,3" Grid.Column="2" Grid.Row="1"/>
		<Rectangle Opacity="0.52" RenderTransformOrigin="-0.047,-0.037" Fill="#FF303030" Stroke="#FF000000" StrokeThickness="1" RadiusX="5" RadiusY="5" Margin="4,8,8,3" Grid.Column="3" Grid.Row="1"/>
		<StackPanel Margin="3.68,8,4.042,6.066" Grid.Column="2" Grid.Row="1">
			<StackPanel Width="190.16" Height="27.526" Orientation="Horizontal">
				<Label Width="150.762" Height="26" Background="#00FFFFFF" FontWeight="Normal" Foreground="#BDCACACA" Content="Sensor Data" Panel.ZIndex="0" HorizontalAlignment="Left"/>
				<Button Width="37" Height="21.526" Background="{x:Null}" Foreground="#FFFFFFFF" Content="R"/>
			</StackPanel>
			<ListBox Width="188" Height="173" Background="#00FFFFFF" BorderBrush="{x:Null}" Foreground="#FF997361" IsSynchronizedWithCurrentItem="True" x:Name="sensorListBox"/>
		</StackPanel>
		<StackPanel HorizontalAlignment="Left" Margin="8,8,0,6.066" Width="223.36" Grid.Column="3" Grid.Row="1">
			<Label Width="222.762" Height="30" Background="#00FFFFFF" FontWeight="Normal" Foreground="#BDCACACA" Content="Log Output" Panel.ZIndex="0" HorizontalAlignment="Left"/>
			<ListBox Background="#00FFFFFF" BorderBrush="{x:Null}" Foreground="#FF8EAF9E" IsSynchronizedWithCurrentItem="True" x:Name="outputListBox" HorizontalAlignment="Left" Width="224" Height="173"/>
		</StackPanel>
		<Canvas Margin="8,8,8,6" Grid.Column="1" Grid.Row="1" Width="174" Height="202" x:Name="radar" Background="{x:Null}" MouseLeftButtonDown="radar_MouseLeftButtonDown" MouseLeftButtonUp="radar_MouseLeftButtonUp" MouseMove="radar_MouseMove">
			<Ellipse Fill="#8C303030" Stroke="#FF969696" StrokeThickness="1" Width="128" Height="128" Canvas.Left="23" Canvas.Top="37"/>
			<Path Fill="#FF303030" Stretch="Fill" Stroke="#FF969696" StrokeThickness="1" Width="1" Height="140" Canvas.Left="87" Canvas.Top="31" Data="M87.2,13.526 L87.2,177.526"/>
			<Path Fill="#FF303030" Stretch="Fill" Stroke="#FF969696" StrokeThickness="1" Width="140" Height="1" Canvas.Left="17" Canvas.Top="101" Data="M15.2,97.526 L153.2,97.526"/>
			<TextBox Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FFFFFFFF" Text="Y" TextWrapping="Wrap" Width="17.84" Height="21" Canvas.Left="79.16" Canvas.Top="12"/>
			<TextBox Width="17.84" Height="21" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FFFFFFFF" Canvas.Left="155" Canvas.Top="91" Text="X" TextWrapping="Wrap"/>
			<Canvas Width="8" Height="8" Canvas.Left="114.2" Canvas.Top="74.526" Visibility="Hidden" x:Name="pointer">
				<Ellipse Fill="#FFFF0000" Stroke="{x:Null}" StrokeThickness="0" Width="2" Height="2" Canvas.Left="3" Canvas.Top="3"/>
				<Ellipse Fill="{x:Null}" Stroke="#FFFF1313" StrokeThickness="1" Width="7" Height="7" Canvas.Left="0.5" Canvas.Top="0.5">
					<Ellipse.BitmapEffect>
							<OuterGlowBitmapEffect GlowColor="Red" GlowSize="4"/>
            		</Ellipse.BitmapEffect>
          						</Ellipse>
			</Canvas>
		</Canvas>
		<Button Width="40" Content="______" FontSize="12" FontWeight="Normal" Padding="1,-8,1,0" Style="{DynamicResource ButtonStyle4}" HorizontalAlignment="Right" Margin="0,6,44,6" FontStretch="Normal" Grid.Column="3" x:Name="Minimize" Click="Minimize_Click">
			<Button.Background>
				<LinearGradientBrush EndPoint="0.464,1.557" StartPoint="0.464,-0.111">
					<GradientStop Color="#FE4F3E3E" Offset="0"/>
					<GradientStop Color="#FF434242" Offset="0.995"/>
					<GradientStop Color="#FF6E6E6E" Offset="0.51"/>
					<GradientStop Color="#FE393939" Offset="1"/>
				</LinearGradientBrush>
			</Button.Background>
		</Button>
		
		<Button HorizontalAlignment="Right" Margin="0,6,0,6" VerticalAlignment="Stretch" Width="40" Content="x" FontSize="14" FontWeight="Bold" Padding="1,-4,1,0" Grid.Column="3" Style="{DynamicResource ButtonStyle1}" x:Name="Quit" Click="Quit_Click">
			<Button.Background>
				<LinearGradientBrush EndPoint="0.464,1.557" StartPoint="0.464,-0.111">
					<GradientStop Color="#FE4F3E3E" Offset="0"/>
					<GradientStop Color="#FF434242" Offset="0.995"/>
					<GradientStop Color="#FF6E6E6E" Offset="0.51"/>
					<GradientStop Color="#FE393939" Offset="1"/>
				</LinearGradientBrush>
			</Button.Background>
		</Button>
		
		<Label Margin="4,1,73.84,5" Content="Dashboard" Foreground="#FFCACACA" Grid.Column="1"/>
		<Rectangle Stroke="{x:Null}" StrokeThickness="0" RadiusX="0" RadiusY="0" Height="29.988" x:Name="DragBar" Fill="#00000000" Margin="0,0,88,0" VerticalAlignment="Top" Grid.ColumnSpan="4" Grid.RowSpan="2" MouseLeftButtonDown="DragBar_MouseLeftButtonDown"/>
		
	</Grid>
</Window>