' Scribbler robot demonstration code
' Copyright 2005, Element Products, Inc.
'
'  {$STAMP BS2}
'  {$PBASIC 2.5}

#DEFINE Verbose = 0

DATA          "Scribby"

' I/O Declarations
LightRight    PIN 0
LightCenter   PIN 1
LightLeft     PIN 2
LineEnable    PIN 3
LineRight     PIN 4
LineLeft      PIN 5
ObsRx         PIN 6
Stall         PIN 7

LedRight      PIN 8
LedCenter     PIN 9
LedLeft       PIN 10
Speaker       PIN 11
MotorRight    PIN 12
MotorLeft     PIN 13
ObsTxRight    PIN 14
ObsTxLeft     PIN 15

' I/O Initialization

HIGH LightRight
HIGH LightCenter
HIGH LightLeft
LOW LineEnable
LOW LedRight
LOW LedCenter
LOW LedLeft
LOW Speaker
LOW MotorRight
LOW MotorLeft
LOW ObsTxRight
LOW ObsTxLeft

'BAUD              CON 84  '9600
BAUD               CON 6  '38400

OUTPIN             CON 16
INPIN              CON 16

GET_INPUT          CON 1
GET_OPEN_LEFT      CON 2
GET_OPEN_RIGHT     CON 3
GET_STALL          CON 4
GET_LIGHT_LEFT     CON 5
GET_LIGHT_CENTER   CON 6
GET_LIGHT_RIGHT    CON 7
GET_LINE_RIGHT     CON 8
GET_LINE_LEFT      CON 9
GET_NAME           CON 10

SET_MOTORS_OFF     CON 20
SET_MOTORS         CON 21
SET_LED_LEFT_ON    CON 22
SET_LED_LEFT_OFF   CON 23
SET_LED_CENTER_ON  CON 24
SET_LED_CENTER_OFF CON 25
SET_LED_RIGHT_ON   CON 26
SET_LED_RIGHT_OFF  CON 27
SET_SPEAKER        CON 28
SET_SPEAKER_2      CON 29
SET_NAME           CON 30

TIMEOUT            CON 10000 ' in ms
PACKET_LENGTH      CON 9
NAME_LENGTH        CON 8

' Global Variables

motor_r VAR Word
motor_l VAR Word
var3    VAR Word

name    VAR Byte(NAME_LENGTH)
inCmd   VAR Byte(PACKET_LENGTH)
temp    VAR Byte

inCmd(PACKET_LENGTH-1) = 0

INIT:
  ' If we want to stop the robot after a long time with no contact
  ' uncomment the below line
  'GOTO MotorsOff ' Will then jump to BEGIN -- mmm spaghetti

BEGIN:
  SERIN INPIN, BAUD, TIMEOUT, INIT, [STR inCmd\PACKET_LENGTH]
  LOOKDOWN inCmd(0), = [GET_INPUT, GET_LINE_RIGHT, GET_LINE_LEFT, GET_LIGHT_LEFT, GET_LIGHT_CENTER, GET_LIGHT_RIGHT,  GET_OPEN_LEFT, GET_OPEN_RIGHT, GET_STALL, GET_NAME, SET_MOTORS_OFF, SET_MOTORS, SET_SPEAKER, SET_SPEAKER_2, SET_LED_LEFT_ON, SET_LED_LEFT_OFF, SET_LED_CENTER_ON, SET_LED_CENTER_OFF, SET_LED_RIGHT_ON, SET_LED_RIGHT_OFF, SET_NAME], temp
  BRANCH temp,        [GetInput,  GetLineRight,   GetLineLeft,   GetLightLeft,   GetLightCenter,   GetLightRight,    GetObsLeft,    GetObsRight,    GetStall,  GetName,  MotorsOff,      Motors,     SetSpeaker,  SetSpeaker2,   OnLeftLED,       OffLeftLED,       OnCenterLED,       OffCenterLED,       OnRightLED,       OffRightLED,       SetName ]
TOP:
  SEROUT OUTPIN, BAUD, [STR inCmd\1]              ' echo command to tell we are done
  GOTO BEGIN


GetInput:
     SEROUT OUTPIN, BAUD, [INL]
     GOTO TOP

GetLineRight:
     HIGH LineEnable
     PAUSE 2
     SEROUT OUTPIN, BAUD, [LineRight]
     LOW LineEnable
     GOTO TOP

GetLineLeft:
     HIGH LineEnable
     PAUSE 2
     SEROUT OUTPIN, BAUD, [LineLeft]
     GOTO TOP

GetLightLeft:
     HIGH LightLeft
     PAUSE 3
     RCTIME LightLeft, 1, temp
     SEROUT OUTPIN, BAUD, [temp]
     GOTO TOP

GetLightCenter:
     HIGH LightCenter
     PAUSE 3
     RCTIME LightCenter, 1, temp
     SEROUT OUTPIN, BAUD, [temp]
     GOTO TOP

GetLightRight:
     HIGH LightRight
     PAUSE 3
     RCTIME LightRight, 1, temp
     SEROUT OUTPIN, BAUD, [temp]
     GOTO TOP

GetObsRight:
     FREQOUT ObsTxRight, 1, 40500
     temp = ObsRX
     LOW ObsTxRight
     SEROUT OUTPIN, BAUD, [temp]
     GOTO TOP

GetObsLeft:
     FREQOUT ObsTxLeft, 1, 40500
     temp = ObsRX
     LOW ObsTxLeft
     SEROUT OUTPIN, BAUD, [temp]
     GOTO TOP

GetStall:
     IF (Stall = 0) THEN  SEROUT OUTPIN, BAUD, [0] ELSE SEROUT OUTPIN, BAUD, [1]
     GOTO TOP

GetName:
     FOR temp = 0 TO NAME_LENGTH - 1
        READ temp, name(temp)
     NEXT
     SEROUT OUTPIN, BAUD, [STR name\NAME_LENGTH]

     GOTO TOP

SetName:
     FOR temp = 0 TO NAME_LENGTH - 1
        WRITE temp, inCmd(1 + temp)
     NEXT

     GOTO TOP

MotorsOff:
     motor_r = 2000
     motor_l = 2000
     PULSOUT MotorRight, motor_r
     PULSOUT MotorLeft, motor_l
     GOTO TOP

SetSpeaker:
     motor_r = inCmd(1)
     motor_r = (motor_r << 8) | inCmd(2)
     motor_l = inCmd(3)
     motor_l = (motor_l << 8) | inCmd(4)

     FREQOUT Speaker, motor_r, motor_l
     GOTO TOP

SetSpeaker2:
     motor_r = inCmd(1)
     motor_r = (motor_r << 8) | inCmd(2)

     motor_l = inCmd(3)
     motor_l = (motor_l << 8) | inCmd(4)

     var3 = inCmd(5)
     var3 = (var3 << 8) | inCmd(6)

     FREQOUT Speaker, motor_r, motor_l, var3
     GOTO TOP

Motors:
     motor_r = (inCmd(1) + 100) * 10
     motor_l = (inCmd(2) + 100) * 10
     PULSOUT MotorRight, motor_r
     PULSOUT MotorLeft, motor_l
     GOTO TOP

OnLeftLED:
     LedLeft = 1
     GOTO TOP

OffLeftLED:
     LedLeft = 0
     GOTO TOP

OnCenterLED:
     LedCenter = 1
     GOTO TOP

OffCenterLED:
     LedCenter = 0
     GOTO TOP

OnRightLED:
     LedRight = 1
     GOTO TOP

OffRightLED:
     LedRight = 0
     GOTO TOP